{"version":3,"sources":["components/Tile.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Tile","props","react_default","a","createElement","className","onClick","handleClick","id","src","img","alt","tiles","Game","state","score","_this","setState","_this2","this","style","fontSize","map","tile","components_Tile","React","Component","App","src_components_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wSAceA,MAXf,SAAcC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OACAC,UAAU,OACVC,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,MAErCN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,IAAKC,IAAKV,EAAMO,OCLhCI,SAAQ,CACZ,CAAEJ,GAAI,SAAUE,IAAK,kIACrB,CAAEF,GAAI,QAASE,IAAK,gIACpB,CAAEF,GAAI,UAAWE,IAAK,gIACtB,CAAEF,GAAI,QAASE,IAAK,gIACpB,CAAEF,GAAI,OAAQE,IAAK,gIACnB,CAAEF,GAAI,SAAUE,IAAK,4HACrB,CAAEF,GAAI,WAAYE,IAAK,2HACvB,CAAEF,GAAI,WAAYE,IAAK,4HACvB,CAAEF,GAAI,WAAYE,IAAK,8HACvB,CAAEF,GAAI,SAAUE,IAAK,8HACrB,CAAEF,GAAI,OAAQE,IAAK,sHACnB,CAAEF,GAAI,UAAWE,IAAK,4HA+BTG,6MA3BbC,MAAQ,CACNC,MAAO,KAGTR,YAAc,SAACC,GACbQ,EAAKC,SAAS,CACZF,MAAOC,EAAKF,MAAMC,MAAQ,6EAIrB,IAAAG,EAAAC,KACP,OACEjB,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QACNN,EAAAC,EAAAC,cAAA,OAAKI,GAAG,UACNN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,KAAGgB,MAAO,CAAEC,SAAU,UAAtB,UAAyCF,KAAKL,MAAMC,QAEtDb,EAAAC,EAAAC,cAAA,OAAKI,GAAG,SACLI,EAAMU,IAAI,SAAAC,GAAI,OACbrB,EAAAC,EAAAC,cAACoB,EAAD,CAAMhB,GAAIe,EAAKf,GAAIE,IAAKa,EAAKb,IAAKH,YAAaW,EAAKX,yBApB7CkB,IAAMC,iBCTVC,MANf,WACE,OACEzB,EAAAC,EAAAC,cAACwB,EAAD,OCMgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a884c5be.chunk.js","sourcesContent":["import React from 'react';\nimport './Tile.css';\n\nfunction Tile(props) {\n  return (\n    <div\n    className='tile'\n    onClick={() => props.handleClick(props.id)}\n    >\n      <img src={props.img} alt={props.id} />\n    </div>\n  )\n}\n\nexport default Tile;\n","import React from 'react';\nimport Tile from './Tile';\nimport './Game.css';\n\nconst tiles = [\n  { id: 'dipper', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/c/cb/S1e16_dipper_will_take_room.png/revision/latest?cb=20160119145706' },\n  { id: 'mabel', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/b/b2/S1e3_mabel_new_wax_figure.png/revision/latest?cb=20160204031402' },\n  { id: 'stanley', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/9/92/S1e16_something_about_you.png/revision/latest?cb=20130530141339' },\n  { id: 'wendy', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/3/35/S1e5_wendy_leaning_on_atm.png/revision/latest?cb=20130603020244' },\n  { id: 'soos', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/b/bb/S1e13_whole_busload_of_em.png/revision/latest?cb=20151221063833' },\n  { id: 'gideon', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/e/e5/S1e11_gideon_is_angry.png/revision/latest?cb=20140427211927' },\n  { id: 'mcgucket', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/f/f5/S1e14_if_you_survive.png/revision/latest?cb=20130305201426' },\n  { id: 'stanford', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/b/b7/S2e13_ha_ha_ha_dipper.jpg/revision/latest?cb=20150805055839' },\n  { id: 'pacifica', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/f/f7/S1e7_Pacifica_Northwest.png/revision/latest?cb=20151116020530' },\n  { id: 'robbie', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/c/c8/S1e5_robbie_with_guitar.png/revision/latest?cb=20160204171654' },\n  { id: 'bill', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/e/ea/S1e19_bill_snap.png/revision/latest?cb=20130905173319' },\n  { id: 'waddles', img: 'https://vignette.wikia.nocookie.net/gravityfalls/images/0/09/S1e18_Waddles_stare.png/revision/latest?cb=20160119145820' }\n];\n\nclass Game extends React.Component {\n  state = {\n    score: 0\n  }\n\n  handleClick = (id) => {\n    this.setState({\n      score: this.state.score + 1\n    });\n  }\n\n  render() {\n    return (\n      <div id='game'>\n        <div id='status'>\n          <h1>Memory Game</h1>\n          <p style={{ fontSize: '1.5em' }}>Score: {this.state.score}</p>\n        </div>\n        <div id='tiles'>\n          {tiles.map(tile => (\n            <Tile id={tile.id} img={tile.img} handleClick={this.handleClick} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}